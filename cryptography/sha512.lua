local char = string.char
local floor = math.floor
local ceil = math.ceil

local bit = _G.bit or _G.bit32

if not bit then
    local status, tbl = pcall(require, "bit")
    if status then bit = tbl end

    local status, tbl = pcall(require, "bit32")
    if status then bit = tbl end
end

if not bit then error("bit library not found!") end

local bor = bit.bor
local lshift = bit.lshift
local bxor = bit.bxor
local band = bit.band
local bnot = bit.bnot
local rshift = bit.rshift
local tobit = bit.tobit

local function toBytes32(num)
    local out = ""
    for i = 0, 3 do
        out = char(band(num, 255)) .. out
        num = rshift(num, 8)
    end
    return out
end

local function not64(L, R) return bnot(L), bnot(R) end
local function and64(L0, R0, L1, R1) return band(L0, L1), band(R0, R1) end
local function xor64(L0, R0, L1, R1) return bxor(L0, L1), bxor(R0, R1) end

local function overflowbit32(L, R) if L < 0 then L = 0x100000000 + L end if R < 0 then R = 0x100000000 + R end if (L+R) > 0xFFFFFFFF then return 1 end return 0 end
local function leftRotate(L, R, n)  return bor(rshift(R, 32-n), lshift(L, n)), bor(lshift(R, n), rshift(L, 32-n)) end
local function rightRotate(L, R, n) return bor(lshift(R, 32-n), rshift(L, n)), bor(rshift(R, n), lshift(L, 32-n)) end
local function rightShift(L, R, n) return rshift(L, n), bor(rshift(R, n), lshift(L, 32-n)) end
local function add64(L0, R0, L1, R1) return tobit(L0 + L1 + overflowbit32(R0, R1)), tobit(R0 + R1) end

local function a0(L, R) local aL, aR = rightRotate(L, R, 1) local bL, bR = rightRotate(L, R, 8) local cL, cR = rightShift(L, R, 7) return bxor(aL, bxor(bL, cL)), bxor(aR, bxor(bR, cR)) end
local function a1(L, R) local aL, aR = rightRotate(L, R, 19) local bL, bR = leftRotate(L, R, 3) local cL, cR = rightShift(L, R, 6) return bxor(aL, bxor(bL, cL)), bxor(aR, bxor(bR, cR)) end
local function z0(L, R) local aL, aR = rightRotate(L, R, 28) local bL, bR = leftRotate(L, R, 30) local cL, cR = leftRotate(L, R, 25) return bxor(aL, bxor(bL, cL)), bxor(aR, bxor(bR, cR)) end
local function z1(L, R) local aL, aR = rightRotate(L, R, 14) local bL, bR = rightRotate(L, R, 18) local cL, cR = leftRotate(L, R, 23) return bxor(aL, bxor(bL, cL)), bxor(aR, bxor(bR, cR)) end

local function ch(L0, R0, L1, R1, L2, R2)
    local aL, aR = and64(L0, R0, L1, R1)
    L0, R0 = not64(L0, R0)
    L0, R0 = and64(L0, R0, L2, R2)
    return xor64(aL, aR, L0, R0)
end

local function maj(L0, R0, L1, R1, L2, R2)
    local aL, aR = and64(L0, R0, L1, R1)
    local bL, bR = and64(L0, R0, L2, R2)
    local cL, cR = and64(L1, R1, L2, R2)
    return bxor(aL, bxor(bL, cL)), bxor(aR, bxor(bR, cR))
end

return function(data)

    local datalen = #data
    local len = ""

    len = char((datalen % 32)*8) .. len
    datalen = floor(datalen / 32)

    for i = 0, 6 do
        local mod = datalen % 256
        len = char(mod) .. len
        datalen = floor(datalen / 256)
    end

    data = data .. "\128" .. string.rep("\0", 128 - ((#data + 9) % 128)) .. len

    local h0L, h0R = 0x6a09e667, 0xf3bcc908
    local h1L, h1R = 0xbb67ae85, 0x84caa73b
    local h2L, h2R = 0x3c6ef372, 0xfe94f82b
    local h3L, h3R = 0xa54ff53a, 0x5f1d36f1
    local h4L, h4R = 0x510e527f, 0xade682d1
    local h5L, h5R = 0x9b05688c, 0x2b3e6c1f
    local h6L, h6R = 0x1f83d9ab, 0xfb41bd6b
    local h7L, h7R = 0x5be0cd19, 0x137e2179

    local chunkL, chunkR = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}

    local tempL, tempR = 0, 0
    local T0L, T0R = 0, 0
    local T1L, T1R = 0, 0

    local AL, AR = 0, 0
    local BL, BR = 0, 0
    local CL, CR = 0, 0
    local DL, DR = 0, 0
    local EL, ER = 0, 0
    local FL, FR = 0, 0
    local GL, GR = 0, 0
    local HL, HR = 0, 0

    for i = 1, #data, 128 do
        
        chunkL[1], chunkR[1] = bor(bor(bor(lshift(data:sub(i,i):byte(), 24), lshift(data:sub(i+1,i+1):byte(), 16)), lshift(data:sub(i+2,i+2):byte(), 8)), data:sub(i+3,i+3):byte()), bor(bor(bor(lshift(data:sub(i+4,i+4):byte(), 24), lshift(data:sub(i+5,i+5):byte(), 16)), lshift(data:sub(i+6,i+6):byte(), 8)), data:sub(i+7,i+7):byte())
        chunkL[2], chunkR[2] = bor(bor(bor(lshift(data:sub(i+8,i+8):byte(), 24), lshift(data:sub(i+9,i+9):byte(), 16)), lshift(data:sub(i+10,i+10):byte(), 8)), data:sub(i+11,i+11):byte()), bor(bor(bor(lshift(data:sub(i+12,i+12):byte(), 24), lshift(data:sub(i+13,i+13):byte(), 16)), lshift(data:sub(i+14,i+14):byte(), 8)), data:sub(i+15,i+15):byte())
        chunkL[3], chunkR[3] = bor(bor(bor(lshift(data:sub(i+16,i+16):byte(), 24), lshift(data:sub(i+17,i+17):byte(), 16)), lshift(data:sub(i+18,i+18):byte(), 8)), data:sub(i+19,i+19):byte()), bor(bor(bor(lshift(data:sub(i+20,i+20):byte(), 24), lshift(data:sub(i+21,i+21):byte(), 16)), lshift(data:sub(i+22,i+22):byte(), 8)), data:sub(i+23,i+23):byte())
        chunkL[4], chunkR[4] = bor(bor(bor(lshift(data:sub(i+24,i+24):byte(), 24), lshift(data:sub(i+25,i+25):byte(), 16)), lshift(data:sub(i+26,i+26):byte(), 8)), data:sub(i+27,i+27):byte()), bor(bor(bor(lshift(data:sub(i+28,i+28):byte(), 24), lshift(data:sub(i+29,i+29):byte(), 16)), lshift(data:sub(i+30,i+30):byte(), 8)), data:sub(i+31,i+31):byte())
        chunkL[5], chunkR[5] = bor(bor(bor(lshift(data:sub(i+32,i+32):byte(), 24), lshift(data:sub(i+33,i+33):byte(), 16)), lshift(data:sub(i+34,i+34):byte(), 8)), data:sub(i+35,i+35):byte()), bor(bor(bor(lshift(data:sub(i+36,i+36):byte(), 24), lshift(data:sub(i+37,i+37):byte(), 16)), lshift(data:sub(i+38,i+38):byte(), 8)), data:sub(i+39,i+39):byte())
        chunkL[6], chunkR[6] = bor(bor(bor(lshift(data:sub(i+40,i+40):byte(), 24), lshift(data:sub(i+41,i+41):byte(), 16)), lshift(data:sub(i+42,i+42):byte(), 8)), data:sub(i+43,i+43):byte()), bor(bor(bor(lshift(data:sub(i+44,i+44):byte(), 24), lshift(data:sub(i+45,i+45):byte(), 16)), lshift(data:sub(i+46,i+46):byte(), 8)), data:sub(i+47,i+47):byte())
        chunkL[7], chunkR[7] = bor(bor(bor(lshift(data:sub(i+48,i+48):byte(), 24), lshift(data:sub(i+49,i+49):byte(), 16)), lshift(data:sub(i+50,i+50):byte(), 8)), data:sub(i+51,i+51):byte()), bor(bor(bor(lshift(data:sub(i+52,i+52):byte(), 24), lshift(data:sub(i+53,i+53):byte(), 16)), lshift(data:sub(i+54,i+54):byte(), 8)), data:sub(i+55,i+55):byte())
        chunkL[8], chunkR[8] = bor(bor(bor(lshift(data:sub(i+56,i+56):byte(), 24), lshift(data:sub(i+57,i+57):byte(), 16)), lshift(data:sub(i+58,i+58):byte(), 8)), data:sub(i+59,i+59):byte()), bor(bor(bor(lshift(data:sub(i+60,i+60):byte(), 24), lshift(data:sub(i+61,i+61):byte(), 16)), lshift(data:sub(i+62,i+62):byte(), 8)), data:sub(i+63,i+63):byte())
        chunkL[9], chunkR[9] = bor(bor(bor(lshift(data:sub(i+64,i+64):byte(), 24), lshift(data:sub(i+65,i+65):byte(), 16)), lshift(data:sub(i+66,i+66):byte(), 8)), data:sub(i+67,i+67):byte()), bor(bor(bor(lshift(data:sub(i+68,i+68):byte(), 24), lshift(data:sub(i+69,i+69):byte(), 16)), lshift(data:sub(i+70,i+70):byte(), 8)), data:sub(i+71,i+71):byte())
        chunkL[10], chunkR[10] = bor(bor(bor(lshift(data:sub(i+72,i+72):byte(), 24), lshift(data:sub(i+73,i+73):byte(), 16)), lshift(data:sub(i+74,i+74):byte(), 8)), data:sub(i+75,i+75):byte()), bor(bor(bor(lshift(data:sub(i+76,i+76):byte(), 24), lshift(data:sub(i+77,i+77):byte(), 16)), lshift(data:sub(i+78,i+78):byte(), 8)), data:sub(i+79,i+79):byte())
        chunkL[11], chunkR[11] = bor(bor(bor(lshift(data:sub(i+80,i+80):byte(), 24), lshift(data:sub(i+81,i+81):byte(), 16)), lshift(data:sub(i+82,i+82):byte(), 8)), data:sub(i+83,i+83):byte()), bor(bor(bor(lshift(data:sub(i+84,i+84):byte(), 24), lshift(data:sub(i+85,i+85):byte(), 16)), lshift(data:sub(i+86,i+86):byte(), 8)), data:sub(i+87,i+87):byte())
        chunkL[12], chunkR[12] = bor(bor(bor(lshift(data:sub(i+88,i+88):byte(), 24), lshift(data:sub(i+89,i+89):byte(), 16)), lshift(data:sub(i+90,i+90):byte(), 8)), data:sub(i+91,i+91):byte()), bor(bor(bor(lshift(data:sub(i+92,i+92):byte(), 24), lshift(data:sub(i+93,i+93):byte(), 16)), lshift(data:sub(i+94,i+94):byte(), 8)), data:sub(i+95,i+95):byte())
        chunkL[13], chunkR[13] = bor(bor(bor(lshift(data:sub(i+96,i+96):byte(), 24), lshift(data:sub(i+97,i+97):byte(), 16)), lshift(data:sub(i+98,i+98):byte(), 8)), data:sub(i+99,i+99):byte()), bor(bor(bor(lshift(data:sub(i+100,i+100):byte(), 24), lshift(data:sub(i+101,i+101):byte(), 16)), lshift(data:sub(i+102,i+102):byte(), 8)), data:sub(i+103,i+103):byte())
        chunkL[14], chunkR[14] = bor(bor(bor(lshift(data:sub(i+104,i+104):byte(), 24), lshift(data:sub(i+105,i+105):byte(), 16)), lshift(data:sub(i+106,i+106):byte(), 8)), data:sub(i+107,i+107):byte()), bor(bor(bor(lshift(data:sub(i+108,i+108):byte(), 24), lshift(data:sub(i+109,i+109):byte(), 16)), lshift(data:sub(i+110,i+110):byte(), 8)), data:sub(i+111,i+111):byte())
        chunkL[15], chunkR[15] = bor(bor(bor(lshift(data:sub(i+112,i+112):byte(), 24), lshift(data:sub(i+113,i+113):byte(), 16)), lshift(data:sub(i+114,i+114):byte(), 8)), data:sub(i+115,i+115):byte()), bor(bor(bor(lshift(data:sub(i+116,i+116):byte(), 24), lshift(data:sub(i+117,i+117):byte(), 16)), lshift(data:sub(i+118,i+118):byte(), 8)), data:sub(i+119,i+119):byte())
        chunkL[16], chunkR[16] = bor(bor(bor(lshift(data:sub(i+120,i+120):byte(), 24), lshift(data:sub(i+121,i+121):byte(), 16)), lshift(data:sub(i+122,i+122):byte(), 8)), data:sub(i+123,i+123):byte()), bor(bor(bor(lshift(data:sub(i+124,i+124):byte(), 24), lshift(data:sub(i+125,i+125):byte(), 16)), lshift(data:sub(i+126,i+126):byte(), 8)), data:sub(i+127,i+127):byte())
        chunkL[17], chunkR[17] = a1(chunkL[15], chunkR[15]) chunkL[17], chunkR[17] = add64(chunkL[17], chunkR[17], chunkL[10], chunkR[10]) tempL, tempR = a0(chunkL[2], chunkR[2]) tempL, tempR = add64(tempL, tempR, chunkL[1], chunkR[1]) chunkL[17], chunkR[17] = add64(chunkL[17], chunkR[17], tempL, tempR)
        chunkL[18], chunkR[18] = a1(chunkL[16], chunkR[16]) chunkL[18], chunkR[18] = add64(chunkL[18], chunkR[18], chunkL[11], chunkR[11]) tempL, tempR = a0(chunkL[3], chunkR[3]) tempL, tempR = add64(tempL, tempR, chunkL[2], chunkR[2]) chunkL[18], chunkR[18] = add64(chunkL[18], chunkR[18], tempL, tempR)
        chunkL[19], chunkR[19] = a1(chunkL[17], chunkR[17]) chunkL[19], chunkR[19] = add64(chunkL[19], chunkR[19], chunkL[12], chunkR[12]) tempL, tempR = a0(chunkL[4], chunkR[4]) tempL, tempR = add64(tempL, tempR, chunkL[3], chunkR[3]) chunkL[19], chunkR[19] = add64(chunkL[19], chunkR[19], tempL, tempR)
        chunkL[20], chunkR[20] = a1(chunkL[18], chunkR[18]) chunkL[20], chunkR[20] = add64(chunkL[20], chunkR[20], chunkL[13], chunkR[13]) tempL, tempR = a0(chunkL[5], chunkR[5]) tempL, tempR = add64(tempL, tempR, chunkL[4], chunkR[4]) chunkL[20], chunkR[20] = add64(chunkL[20], chunkR[20], tempL, tempR)
        chunkL[21], chunkR[21] = a1(chunkL[19], chunkR[19]) chunkL[21], chunkR[21] = add64(chunkL[21], chunkR[21], chunkL[14], chunkR[14]) tempL, tempR = a0(chunkL[6], chunkR[6]) tempL, tempR = add64(tempL, tempR, chunkL[5], chunkR[5]) chunkL[21], chunkR[21] = add64(chunkL[21], chunkR[21], tempL, tempR)
        chunkL[22], chunkR[22] = a1(chunkL[20], chunkR[20]) chunkL[22], chunkR[22] = add64(chunkL[22], chunkR[22], chunkL[15], chunkR[15]) tempL, tempR = a0(chunkL[7], chunkR[7]) tempL, tempR = add64(tempL, tempR, chunkL[6], chunkR[6]) chunkL[22], chunkR[22] = add64(chunkL[22], chunkR[22], tempL, tempR)
        chunkL[23], chunkR[23] = a1(chunkL[21], chunkR[21]) chunkL[23], chunkR[23] = add64(chunkL[23], chunkR[23], chunkL[16], chunkR[16]) tempL, tempR = a0(chunkL[8], chunkR[8]) tempL, tempR = add64(tempL, tempR, chunkL[7], chunkR[7]) chunkL[23], chunkR[23] = add64(chunkL[23], chunkR[23], tempL, tempR)
        chunkL[24], chunkR[24] = a1(chunkL[22], chunkR[22]) chunkL[24], chunkR[24] = add64(chunkL[24], chunkR[24], chunkL[17], chunkR[17]) tempL, tempR = a0(chunkL[9], chunkR[9]) tempL, tempR = add64(tempL, tempR, chunkL[8], chunkR[8]) chunkL[24], chunkR[24] = add64(chunkL[24], chunkR[24], tempL, tempR)
        chunkL[25], chunkR[25] = a1(chunkL[23], chunkR[23]) chunkL[25], chunkR[25] = add64(chunkL[25], chunkR[25], chunkL[18], chunkR[18]) tempL, tempR = a0(chunkL[10], chunkR[10]) tempL, tempR = add64(tempL, tempR, chunkL[9], chunkR[9]) chunkL[25], chunkR[25] = add64(chunkL[25], chunkR[25], tempL, tempR)
        chunkL[26], chunkR[26] = a1(chunkL[24], chunkR[24]) chunkL[26], chunkR[26] = add64(chunkL[26], chunkR[26], chunkL[19], chunkR[19]) tempL, tempR = a0(chunkL[11], chunkR[11]) tempL, tempR = add64(tempL, tempR, chunkL[10], chunkR[10]) chunkL[26], chunkR[26] = add64(chunkL[26], chunkR[26], tempL, tempR)
        chunkL[27], chunkR[27] = a1(chunkL[25], chunkR[25]) chunkL[27], chunkR[27] = add64(chunkL[27], chunkR[27], chunkL[20], chunkR[20]) tempL, tempR = a0(chunkL[12], chunkR[12]) tempL, tempR = add64(tempL, tempR, chunkL[11], chunkR[11]) chunkL[27], chunkR[27] = add64(chunkL[27], chunkR[27], tempL, tempR)
        chunkL[28], chunkR[28] = a1(chunkL[26], chunkR[26]) chunkL[28], chunkR[28] = add64(chunkL[28], chunkR[28], chunkL[21], chunkR[21]) tempL, tempR = a0(chunkL[13], chunkR[13]) tempL, tempR = add64(tempL, tempR, chunkL[12], chunkR[12]) chunkL[28], chunkR[28] = add64(chunkL[28], chunkR[28], tempL, tempR)
        chunkL[29], chunkR[29] = a1(chunkL[27], chunkR[27]) chunkL[29], chunkR[29] = add64(chunkL[29], chunkR[29], chunkL[22], chunkR[22]) tempL, tempR = a0(chunkL[14], chunkR[14]) tempL, tempR = add64(tempL, tempR, chunkL[13], chunkR[13]) chunkL[29], chunkR[29] = add64(chunkL[29], chunkR[29], tempL, tempR)
        chunkL[30], chunkR[30] = a1(chunkL[28], chunkR[28]) chunkL[30], chunkR[30] = add64(chunkL[30], chunkR[30], chunkL[23], chunkR[23]) tempL, tempR = a0(chunkL[15], chunkR[15]) tempL, tempR = add64(tempL, tempR, chunkL[14], chunkR[14]) chunkL[30], chunkR[30] = add64(chunkL[30], chunkR[30], tempL, tempR)
        chunkL[31], chunkR[31] = a1(chunkL[29], chunkR[29]) chunkL[31], chunkR[31] = add64(chunkL[31], chunkR[31], chunkL[24], chunkR[24]) tempL, tempR = a0(chunkL[16], chunkR[16]) tempL, tempR = add64(tempL, tempR, chunkL[15], chunkR[15]) chunkL[31], chunkR[31] = add64(chunkL[31], chunkR[31], tempL, tempR)
        chunkL[32], chunkR[32] = a1(chunkL[30], chunkR[30]) chunkL[32], chunkR[32] = add64(chunkL[32], chunkR[32], chunkL[25], chunkR[25]) tempL, tempR = a0(chunkL[17], chunkR[17]) tempL, tempR = add64(tempL, tempR, chunkL[16], chunkR[16]) chunkL[32], chunkR[32] = add64(chunkL[32], chunkR[32], tempL, tempR)
        chunkL[33], chunkR[33] = a1(chunkL[31], chunkR[31]) chunkL[33], chunkR[33] = add64(chunkL[33], chunkR[33], chunkL[26], chunkR[26]) tempL, tempR = a0(chunkL[18], chunkR[18]) tempL, tempR = add64(tempL, tempR, chunkL[17], chunkR[17]) chunkL[33], chunkR[33] = add64(chunkL[33], chunkR[33], tempL, tempR)
        chunkL[34], chunkR[34] = a1(chunkL[32], chunkR[32]) chunkL[34], chunkR[34] = add64(chunkL[34], chunkR[34], chunkL[27], chunkR[27]) tempL, tempR = a0(chunkL[19], chunkR[19]) tempL, tempR = add64(tempL, tempR, chunkL[18], chunkR[18]) chunkL[34], chunkR[34] = add64(chunkL[34], chunkR[34], tempL, tempR)
        chunkL[35], chunkR[35] = a1(chunkL[33], chunkR[33]) chunkL[35], chunkR[35] = add64(chunkL[35], chunkR[35], chunkL[28], chunkR[28]) tempL, tempR = a0(chunkL[20], chunkR[20]) tempL, tempR = add64(tempL, tempR, chunkL[19], chunkR[19]) chunkL[35], chunkR[35] = add64(chunkL[35], chunkR[35], tempL, tempR)
        chunkL[36], chunkR[36] = a1(chunkL[34], chunkR[34]) chunkL[36], chunkR[36] = add64(chunkL[36], chunkR[36], chunkL[29], chunkR[29]) tempL, tempR = a0(chunkL[21], chunkR[21]) tempL, tempR = add64(tempL, tempR, chunkL[20], chunkR[20]) chunkL[36], chunkR[36] = add64(chunkL[36], chunkR[36], tempL, tempR)
        chunkL[37], chunkR[37] = a1(chunkL[35], chunkR[35]) chunkL[37], chunkR[37] = add64(chunkL[37], chunkR[37], chunkL[30], chunkR[30]) tempL, tempR = a0(chunkL[22], chunkR[22]) tempL, tempR = add64(tempL, tempR, chunkL[21], chunkR[21]) chunkL[37], chunkR[37] = add64(chunkL[37], chunkR[37], tempL, tempR)
        chunkL[38], chunkR[38] = a1(chunkL[36], chunkR[36]) chunkL[38], chunkR[38] = add64(chunkL[38], chunkR[38], chunkL[31], chunkR[31]) tempL, tempR = a0(chunkL[23], chunkR[23]) tempL, tempR = add64(tempL, tempR, chunkL[22], chunkR[22]) chunkL[38], chunkR[38] = add64(chunkL[38], chunkR[38], tempL, tempR)
        chunkL[39], chunkR[39] = a1(chunkL[37], chunkR[37]) chunkL[39], chunkR[39] = add64(chunkL[39], chunkR[39], chunkL[32], chunkR[32]) tempL, tempR = a0(chunkL[24], chunkR[24]) tempL, tempR = add64(tempL, tempR, chunkL[23], chunkR[23]) chunkL[39], chunkR[39] = add64(chunkL[39], chunkR[39], tempL, tempR)
        chunkL[40], chunkR[40] = a1(chunkL[38], chunkR[38]) chunkL[40], chunkR[40] = add64(chunkL[40], chunkR[40], chunkL[33], chunkR[33]) tempL, tempR = a0(chunkL[25], chunkR[25]) tempL, tempR = add64(tempL, tempR, chunkL[24], chunkR[24]) chunkL[40], chunkR[40] = add64(chunkL[40], chunkR[40], tempL, tempR)
        chunkL[41], chunkR[41] = a1(chunkL[39], chunkR[39]) chunkL[41], chunkR[41] = add64(chunkL[41], chunkR[41], chunkL[34], chunkR[34]) tempL, tempR = a0(chunkL[26], chunkR[26]) tempL, tempR = add64(tempL, tempR, chunkL[25], chunkR[25]) chunkL[41], chunkR[41] = add64(chunkL[41], chunkR[41], tempL, tempR)
        chunkL[42], chunkR[42] = a1(chunkL[40], chunkR[40]) chunkL[42], chunkR[42] = add64(chunkL[42], chunkR[42], chunkL[35], chunkR[35]) tempL, tempR = a0(chunkL[27], chunkR[27]) tempL, tempR = add64(tempL, tempR, chunkL[26], chunkR[26]) chunkL[42], chunkR[42] = add64(chunkL[42], chunkR[42], tempL, tempR)
        chunkL[43], chunkR[43] = a1(chunkL[41], chunkR[41]) chunkL[43], chunkR[43] = add64(chunkL[43], chunkR[43], chunkL[36], chunkR[36]) tempL, tempR = a0(chunkL[28], chunkR[28]) tempL, tempR = add64(tempL, tempR, chunkL[27], chunkR[27]) chunkL[43], chunkR[43] = add64(chunkL[43], chunkR[43], tempL, tempR)
        chunkL[44], chunkR[44] = a1(chunkL[42], chunkR[42]) chunkL[44], chunkR[44] = add64(chunkL[44], chunkR[44], chunkL[37], chunkR[37]) tempL, tempR = a0(chunkL[29], chunkR[29]) tempL, tempR = add64(tempL, tempR, chunkL[28], chunkR[28]) chunkL[44], chunkR[44] = add64(chunkL[44], chunkR[44], tempL, tempR)
        chunkL[45], chunkR[45] = a1(chunkL[43], chunkR[43]) chunkL[45], chunkR[45] = add64(chunkL[45], chunkR[45], chunkL[38], chunkR[38]) tempL, tempR = a0(chunkL[30], chunkR[30]) tempL, tempR = add64(tempL, tempR, chunkL[29], chunkR[29]) chunkL[45], chunkR[45] = add64(chunkL[45], chunkR[45], tempL, tempR)
        chunkL[46], chunkR[46] = a1(chunkL[44], chunkR[44]) chunkL[46], chunkR[46] = add64(chunkL[46], chunkR[46], chunkL[39], chunkR[39]) tempL, tempR = a0(chunkL[31], chunkR[31]) tempL, tempR = add64(tempL, tempR, chunkL[30], chunkR[30]) chunkL[46], chunkR[46] = add64(chunkL[46], chunkR[46], tempL, tempR)
        chunkL[47], chunkR[47] = a1(chunkL[45], chunkR[45]) chunkL[47], chunkR[47] = add64(chunkL[47], chunkR[47], chunkL[40], chunkR[40]) tempL, tempR = a0(chunkL[32], chunkR[32]) tempL, tempR = add64(tempL, tempR, chunkL[31], chunkR[31]) chunkL[47], chunkR[47] = add64(chunkL[47], chunkR[47], tempL, tempR)
        chunkL[48], chunkR[48] = a1(chunkL[46], chunkR[46]) chunkL[48], chunkR[48] = add64(chunkL[48], chunkR[48], chunkL[41], chunkR[41]) tempL, tempR = a0(chunkL[33], chunkR[33]) tempL, tempR = add64(tempL, tempR, chunkL[32], chunkR[32]) chunkL[48], chunkR[48] = add64(chunkL[48], chunkR[48], tempL, tempR)
        chunkL[49], chunkR[49] = a1(chunkL[47], chunkR[47]) chunkL[49], chunkR[49] = add64(chunkL[49], chunkR[49], chunkL[42], chunkR[42]) tempL, tempR = a0(chunkL[34], chunkR[34]) tempL, tempR = add64(tempL, tempR, chunkL[33], chunkR[33]) chunkL[49], chunkR[49] = add64(chunkL[49], chunkR[49], tempL, tempR)
        chunkL[50], chunkR[50] = a1(chunkL[48], chunkR[48]) chunkL[50], chunkR[50] = add64(chunkL[50], chunkR[50], chunkL[43], chunkR[43]) tempL, tempR = a0(chunkL[35], chunkR[35]) tempL, tempR = add64(tempL, tempR, chunkL[34], chunkR[34]) chunkL[50], chunkR[50] = add64(chunkL[50], chunkR[50], tempL, tempR)
        chunkL[51], chunkR[51] = a1(chunkL[49], chunkR[49]) chunkL[51], chunkR[51] = add64(chunkL[51], chunkR[51], chunkL[44], chunkR[44]) tempL, tempR = a0(chunkL[36], chunkR[36]) tempL, tempR = add64(tempL, tempR, chunkL[35], chunkR[35]) chunkL[51], chunkR[51] = add64(chunkL[51], chunkR[51], tempL, tempR)
        chunkL[52], chunkR[52] = a1(chunkL[50], chunkR[50]) chunkL[52], chunkR[52] = add64(chunkL[52], chunkR[52], chunkL[45], chunkR[45]) tempL, tempR = a0(chunkL[37], chunkR[37]) tempL, tempR = add64(tempL, tempR, chunkL[36], chunkR[36]) chunkL[52], chunkR[52] = add64(chunkL[52], chunkR[52], tempL, tempR)
        chunkL[53], chunkR[53] = a1(chunkL[51], chunkR[51]) chunkL[53], chunkR[53] = add64(chunkL[53], chunkR[53], chunkL[46], chunkR[46]) tempL, tempR = a0(chunkL[38], chunkR[38]) tempL, tempR = add64(tempL, tempR, chunkL[37], chunkR[37]) chunkL[53], chunkR[53] = add64(chunkL[53], chunkR[53], tempL, tempR)
        chunkL[54], chunkR[54] = a1(chunkL[52], chunkR[52]) chunkL[54], chunkR[54] = add64(chunkL[54], chunkR[54], chunkL[47], chunkR[47]) tempL, tempR = a0(chunkL[39], chunkR[39]) tempL, tempR = add64(tempL, tempR, chunkL[38], chunkR[38]) chunkL[54], chunkR[54] = add64(chunkL[54], chunkR[54], tempL, tempR)
        chunkL[55], chunkR[55] = a1(chunkL[53], chunkR[53]) chunkL[55], chunkR[55] = add64(chunkL[55], chunkR[55], chunkL[48], chunkR[48]) tempL, tempR = a0(chunkL[40], chunkR[40]) tempL, tempR = add64(tempL, tempR, chunkL[39], chunkR[39]) chunkL[55], chunkR[55] = add64(chunkL[55], chunkR[55], tempL, tempR)
        chunkL[56], chunkR[56] = a1(chunkL[54], chunkR[54]) chunkL[56], chunkR[56] = add64(chunkL[56], chunkR[56], chunkL[49], chunkR[49]) tempL, tempR = a0(chunkL[41], chunkR[41]) tempL, tempR = add64(tempL, tempR, chunkL[40], chunkR[40]) chunkL[56], chunkR[56] = add64(chunkL[56], chunkR[56], tempL, tempR)
        chunkL[57], chunkR[57] = a1(chunkL[55], chunkR[55]) chunkL[57], chunkR[57] = add64(chunkL[57], chunkR[57], chunkL[50], chunkR[50]) tempL, tempR = a0(chunkL[42], chunkR[42]) tempL, tempR = add64(tempL, tempR, chunkL[41], chunkR[41]) chunkL[57], chunkR[57] = add64(chunkL[57], chunkR[57], tempL, tempR)
        chunkL[58], chunkR[58] = a1(chunkL[56], chunkR[56]) chunkL[58], chunkR[58] = add64(chunkL[58], chunkR[58], chunkL[51], chunkR[51]) tempL, tempR = a0(chunkL[43], chunkR[43]) tempL, tempR = add64(tempL, tempR, chunkL[42], chunkR[42]) chunkL[58], chunkR[58] = add64(chunkL[58], chunkR[58], tempL, tempR)
        chunkL[59], chunkR[59] = a1(chunkL[57], chunkR[57]) chunkL[59], chunkR[59] = add64(chunkL[59], chunkR[59], chunkL[52], chunkR[52]) tempL, tempR = a0(chunkL[44], chunkR[44]) tempL, tempR = add64(tempL, tempR, chunkL[43], chunkR[43]) chunkL[59], chunkR[59] = add64(chunkL[59], chunkR[59], tempL, tempR)
        chunkL[60], chunkR[60] = a1(chunkL[58], chunkR[58]) chunkL[60], chunkR[60] = add64(chunkL[60], chunkR[60], chunkL[53], chunkR[53]) tempL, tempR = a0(chunkL[45], chunkR[45]) tempL, tempR = add64(tempL, tempR, chunkL[44], chunkR[44]) chunkL[60], chunkR[60] = add64(chunkL[60], chunkR[60], tempL, tempR)
        chunkL[61], chunkR[61] = a1(chunkL[59], chunkR[59]) chunkL[61], chunkR[61] = add64(chunkL[61], chunkR[61], chunkL[54], chunkR[54]) tempL, tempR = a0(chunkL[46], chunkR[46]) tempL, tempR = add64(tempL, tempR, chunkL[45], chunkR[45]) chunkL[61], chunkR[61] = add64(chunkL[61], chunkR[61], tempL, tempR)
        chunkL[62], chunkR[62] = a1(chunkL[60], chunkR[60]) chunkL[62], chunkR[62] = add64(chunkL[62], chunkR[62], chunkL[55], chunkR[55]) tempL, tempR = a0(chunkL[47], chunkR[47]) tempL, tempR = add64(tempL, tempR, chunkL[46], chunkR[46]) chunkL[62], chunkR[62] = add64(chunkL[62], chunkR[62], tempL, tempR)
        chunkL[63], chunkR[63] = a1(chunkL[61], chunkR[61]) chunkL[63], chunkR[63] = add64(chunkL[63], chunkR[63], chunkL[56], chunkR[56]) tempL, tempR = a0(chunkL[48], chunkR[48]) tempL, tempR = add64(tempL, tempR, chunkL[47], chunkR[47]) chunkL[63], chunkR[63] = add64(chunkL[63], chunkR[63], tempL, tempR)
        chunkL[64], chunkR[64] = a1(chunkL[62], chunkR[62]) chunkL[64], chunkR[64] = add64(chunkL[64], chunkR[64], chunkL[57], chunkR[57]) tempL, tempR = a0(chunkL[49], chunkR[49]) tempL, tempR = add64(tempL, tempR, chunkL[48], chunkR[48]) chunkL[64], chunkR[64] = add64(chunkL[64], chunkR[64], tempL, tempR)
        chunkL[65], chunkR[65] = a1(chunkL[63], chunkR[63]) chunkL[65], chunkR[65] = add64(chunkL[65], chunkR[65], chunkL[58], chunkR[58]) tempL, tempR = a0(chunkL[50], chunkR[50]) tempL, tempR = add64(tempL, tempR, chunkL[49], chunkR[49]) chunkL[65], chunkR[65] = add64(chunkL[65], chunkR[65], tempL, tempR)
        chunkL[66], chunkR[66] = a1(chunkL[64], chunkR[64]) chunkL[66], chunkR[66] = add64(chunkL[66], chunkR[66], chunkL[59], chunkR[59]) tempL, tempR = a0(chunkL[51], chunkR[51]) tempL, tempR = add64(tempL, tempR, chunkL[50], chunkR[50]) chunkL[66], chunkR[66] = add64(chunkL[66], chunkR[66], tempL, tempR)
        chunkL[67], chunkR[67] = a1(chunkL[65], chunkR[65]) chunkL[67], chunkR[67] = add64(chunkL[67], chunkR[67], chunkL[60], chunkR[60]) tempL, tempR = a0(chunkL[52], chunkR[52]) tempL, tempR = add64(tempL, tempR, chunkL[51], chunkR[51]) chunkL[67], chunkR[67] = add64(chunkL[67], chunkR[67], tempL, tempR)
        chunkL[68], chunkR[68] = a1(chunkL[66], chunkR[66]) chunkL[68], chunkR[68] = add64(chunkL[68], chunkR[68], chunkL[61], chunkR[61]) tempL, tempR = a0(chunkL[53], chunkR[53]) tempL, tempR = add64(tempL, tempR, chunkL[52], chunkR[52]) chunkL[68], chunkR[68] = add64(chunkL[68], chunkR[68], tempL, tempR)
        chunkL[69], chunkR[69] = a1(chunkL[67], chunkR[67]) chunkL[69], chunkR[69] = add64(chunkL[69], chunkR[69], chunkL[62], chunkR[62]) tempL, tempR = a0(chunkL[54], chunkR[54]) tempL, tempR = add64(tempL, tempR, chunkL[53], chunkR[53]) chunkL[69], chunkR[69] = add64(chunkL[69], chunkR[69], tempL, tempR)
        chunkL[70], chunkR[70] = a1(chunkL[68], chunkR[68]) chunkL[70], chunkR[70] = add64(chunkL[70], chunkR[70], chunkL[63], chunkR[63]) tempL, tempR = a0(chunkL[55], chunkR[55]) tempL, tempR = add64(tempL, tempR, chunkL[54], chunkR[54]) chunkL[70], chunkR[70] = add64(chunkL[70], chunkR[70], tempL, tempR)
        chunkL[71], chunkR[71] = a1(chunkL[69], chunkR[69]) chunkL[71], chunkR[71] = add64(chunkL[71], chunkR[71], chunkL[64], chunkR[64]) tempL, tempR = a0(chunkL[56], chunkR[56]) tempL, tempR = add64(tempL, tempR, chunkL[55], chunkR[55]) chunkL[71], chunkR[71] = add64(chunkL[71], chunkR[71], tempL, tempR)
        chunkL[72], chunkR[72] = a1(chunkL[70], chunkR[70]) chunkL[72], chunkR[72] = add64(chunkL[72], chunkR[72], chunkL[65], chunkR[65]) tempL, tempR = a0(chunkL[57], chunkR[57]) tempL, tempR = add64(tempL, tempR, chunkL[56], chunkR[56]) chunkL[72], chunkR[72] = add64(chunkL[72], chunkR[72], tempL, tempR)
        chunkL[73], chunkR[73] = a1(chunkL[71], chunkR[71]) chunkL[73], chunkR[73] = add64(chunkL[73], chunkR[73], chunkL[66], chunkR[66]) tempL, tempR = a0(chunkL[58], chunkR[58]) tempL, tempR = add64(tempL, tempR, chunkL[57], chunkR[57]) chunkL[73], chunkR[73] = add64(chunkL[73], chunkR[73], tempL, tempR)
        chunkL[74], chunkR[74] = a1(chunkL[72], chunkR[72]) chunkL[74], chunkR[74] = add64(chunkL[74], chunkR[74], chunkL[67], chunkR[67]) tempL, tempR = a0(chunkL[59], chunkR[59]) tempL, tempR = add64(tempL, tempR, chunkL[58], chunkR[58]) chunkL[74], chunkR[74] = add64(chunkL[74], chunkR[74], tempL, tempR)
        chunkL[75], chunkR[75] = a1(chunkL[73], chunkR[73]) chunkL[75], chunkR[75] = add64(chunkL[75], chunkR[75], chunkL[68], chunkR[68]) tempL, tempR = a0(chunkL[60], chunkR[60]) tempL, tempR = add64(tempL, tempR, chunkL[59], chunkR[59]) chunkL[75], chunkR[75] = add64(chunkL[75], chunkR[75], tempL, tempR)
        chunkL[76], chunkR[76] = a1(chunkL[74], chunkR[74]) chunkL[76], chunkR[76] = add64(chunkL[76], chunkR[76], chunkL[69], chunkR[69]) tempL, tempR = a0(chunkL[61], chunkR[61]) tempL, tempR = add64(tempL, tempR, chunkL[60], chunkR[60]) chunkL[76], chunkR[76] = add64(chunkL[76], chunkR[76], tempL, tempR)
        chunkL[77], chunkR[77] = a1(chunkL[75], chunkR[75]) chunkL[77], chunkR[77] = add64(chunkL[77], chunkR[77], chunkL[70], chunkR[70]) tempL, tempR = a0(chunkL[62], chunkR[62]) tempL, tempR = add64(tempL, tempR, chunkL[61], chunkR[61]) chunkL[77], chunkR[77] = add64(chunkL[77], chunkR[77], tempL, tempR)
        chunkL[78], chunkR[78] = a1(chunkL[76], chunkR[76]) chunkL[78], chunkR[78] = add64(chunkL[78], chunkR[78], chunkL[71], chunkR[71]) tempL, tempR = a0(chunkL[63], chunkR[63]) tempL, tempR = add64(tempL, tempR, chunkL[62], chunkR[62]) chunkL[78], chunkR[78] = add64(chunkL[78], chunkR[78], tempL, tempR)
        chunkL[79], chunkR[79] = a1(chunkL[77], chunkR[77]) chunkL[79], chunkR[79] = add64(chunkL[79], chunkR[79], chunkL[72], chunkR[72]) tempL, tempR = a0(chunkL[64], chunkR[64]) tempL, tempR = add64(tempL, tempR, chunkL[63], chunkR[63]) chunkL[79], chunkR[79] = add64(chunkL[79], chunkR[79], tempL, tempR)
        chunkL[80], chunkR[80] = a1(chunkL[78], chunkR[78]) chunkL[80], chunkR[80] = add64(chunkL[80], chunkR[80], chunkL[73], chunkR[73]) tempL, tempR = a0(chunkL[65], chunkR[65]) tempL, tempR = add64(tempL, tempR, chunkL[64], chunkR[64]) chunkL[80], chunkR[80] = add64(chunkL[80], chunkR[80], tempL, tempR)

        AL, AR = h0L, h0R
        BL, BR = h1L, h1R
        CL, CR = h2L, h2R
        DL, DR = h3L, h3R
        EL, ER = h4L, h4R
        FL, FR = h5L, h5R
        GL, GR = h6L, h6R
        HL, HR = h7L, h7R

        T0L, T0R = add64(HL, HR, chunkL[1], chunkR[1]) T0L, T0R = add64(T0L, T0R, 1116352408, 3609767458) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[2], chunkR[2]) T0L, T0R = add64(T0L, T0R, 1899447441, 602891725) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[3], chunkR[3]) T0L, T0R = add64(T0L, T0R, 3049323471, 3964484399) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[4], chunkR[4]) T0L, T0R = add64(T0L, T0R, 3921009573, 2173295548) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[5], chunkR[5]) T0L, T0R = add64(T0L, T0R, 961987163, 4081628472) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[6], chunkR[6]) T0L, T0R = add64(T0L, T0R, 1508970993, 3053834265) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[7], chunkR[7]) T0L, T0R = add64(T0L, T0R, 2453635748, 2937671579) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[8], chunkR[8]) T0L, T0R = add64(T0L, T0R, 2870763221, 3664609560) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[9], chunkR[9]) T0L, T0R = add64(T0L, T0R, 3624381080, 2734883394) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[10], chunkR[10]) T0L, T0R = add64(T0L, T0R, 310598401, 1164996542) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[11], chunkR[11]) T0L, T0R = add64(T0L, T0R, 607225278, 1323610764) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[12], chunkR[12]) T0L, T0R = add64(T0L, T0R, 1426881987, 3590304994) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[13], chunkR[13]) T0L, T0R = add64(T0L, T0R, 1925078388, 4068182383) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[14], chunkR[14]) T0L, T0R = add64(T0L, T0R, 2162078206, 991336113) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[15], chunkR[15]) T0L, T0R = add64(T0L, T0R, 2614888103, 633803317) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[16], chunkR[16]) T0L, T0R = add64(T0L, T0R, 3248222580, 3479774868) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[17], chunkR[17]) T0L, T0R = add64(T0L, T0R, 3835390401, 2666613458) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[18], chunkR[18]) T0L, T0R = add64(T0L, T0R, 4022224774, 944711139) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[19], chunkR[19]) T0L, T0R = add64(T0L, T0R, 264347078, 2341262773) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[20], chunkR[20]) T0L, T0R = add64(T0L, T0R, 604807628, 2007800933) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[21], chunkR[21]) T0L, T0R = add64(T0L, T0R, 770255983, 1495990901) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[22], chunkR[22]) T0L, T0R = add64(T0L, T0R, 1249150122, 1856431235) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[23], chunkR[23]) T0L, T0R = add64(T0L, T0R, 1555081692, 3175218132) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[24], chunkR[24]) T0L, T0R = add64(T0L, T0R, 1996064986, 2198950837) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[25], chunkR[25]) T0L, T0R = add64(T0L, T0R, 2554220882, 3999719339) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[26], chunkR[26]) T0L, T0R = add64(T0L, T0R, 2821834349, 766784016) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[27], chunkR[27]) T0L, T0R = add64(T0L, T0R, 2952996808, 2566594879) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[28], chunkR[28]) T0L, T0R = add64(T0L, T0R, 3210313671, 3203337956) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[29], chunkR[29]) T0L, T0R = add64(T0L, T0R, 3336571891, 1034457026) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[30], chunkR[30]) T0L, T0R = add64(T0L, T0R, 3584528711, 2466948901) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[31], chunkR[31]) T0L, T0R = add64(T0L, T0R, 113926993, 3758326383) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[32], chunkR[32]) T0L, T0R = add64(T0L, T0R, 338241895, 168717936) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[33], chunkR[33]) T0L, T0R = add64(T0L, T0R, 666307205, 1188179964) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[34], chunkR[34]) T0L, T0R = add64(T0L, T0R, 773529912, 1546045734) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[35], chunkR[35]) T0L, T0R = add64(T0L, T0R, 1294757372, 1522805485) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[36], chunkR[36]) T0L, T0R = add64(T0L, T0R, 1396182291, 2643833823) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[37], chunkR[37]) T0L, T0R = add64(T0L, T0R, 1695183700, 2343527390) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[38], chunkR[38]) T0L, T0R = add64(T0L, T0R, 1986661051, 1014477480) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[39], chunkR[39]) T0L, T0R = add64(T0L, T0R, 2177026350, 1206759142) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[40], chunkR[40]) T0L, T0R = add64(T0L, T0R, 2456956037, 344077627) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[41], chunkR[41]) T0L, T0R = add64(T0L, T0R, 2730485921, 1290863460) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[42], chunkR[42]) T0L, T0R = add64(T0L, T0R, 2820302411, 3158454273) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[43], chunkR[43]) T0L, T0R = add64(T0L, T0R, 3259730800, 3505952657) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[44], chunkR[44]) T0L, T0R = add64(T0L, T0R, 3345764771, 106217008) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[45], chunkR[45]) T0L, T0R = add64(T0L, T0R, 3516065817, 3606008344) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[46], chunkR[46]) T0L, T0R = add64(T0L, T0R, 3600352804, 1432725776) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[47], chunkR[47]) T0L, T0R = add64(T0L, T0R, 4094571909, 1467031594) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[48], chunkR[48]) T0L, T0R = add64(T0L, T0R, 275423344, 851169720) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[49], chunkR[49]) T0L, T0R = add64(T0L, T0R, 430227734, 3100823752) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[50], chunkR[50]) T0L, T0R = add64(T0L, T0R, 506948616, 1363258195) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[51], chunkR[51]) T0L, T0R = add64(T0L, T0R, 659060556, 3750685593) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[52], chunkR[52]) T0L, T0R = add64(T0L, T0R, 883997877, 3785050280) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[53], chunkR[53]) T0L, T0R = add64(T0L, T0R, 958139571, 3318307427) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[54], chunkR[54]) T0L, T0R = add64(T0L, T0R, 1322822218, 3812723403) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[55], chunkR[55]) T0L, T0R = add64(T0L, T0R, 1537002063, 2003034995) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[56], chunkR[56]) T0L, T0R = add64(T0L, T0R, 1747873779, 3602036899) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[57], chunkR[57]) T0L, T0R = add64(T0L, T0R, 1955562222, 1575990012) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[58], chunkR[58]) T0L, T0R = add64(T0L, T0R, 2024104815, 1125592928) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[59], chunkR[59]) T0L, T0R = add64(T0L, T0R, 2227730452, 2716904306) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[60], chunkR[60]) T0L, T0R = add64(T0L, T0R, 2361852424, 442776044) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[61], chunkR[61]) T0L, T0R = add64(T0L, T0R, 2428436474, 593698344) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[62], chunkR[62]) T0L, T0R = add64(T0L, T0R, 2756734187, 3733110249) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[63], chunkR[63]) T0L, T0R = add64(T0L, T0R, 3204031479, 2999351573) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[64], chunkR[64]) T0L, T0R = add64(T0L, T0R, 3329325298, 3815920427) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[65], chunkR[65]) T0L, T0R = add64(T0L, T0R, 3391569614, 3928383900) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[66], chunkR[66]) T0L, T0R = add64(T0L, T0R, 3515267271, 566280711) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[67], chunkR[67]) T0L, T0R = add64(T0L, T0R, 3940187606, 3454069534) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[68], chunkR[68]) T0L, T0R = add64(T0L, T0R, 4118630271, 4000239992) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[69], chunkR[69]) T0L, T0R = add64(T0L, T0R, 116418474, 1914138554) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[70], chunkR[70]) T0L, T0R = add64(T0L, T0R, 174292421, 2731055270) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[71], chunkR[71]) T0L, T0R = add64(T0L, T0R, 289380356, 3203993006) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[72], chunkR[72]) T0L, T0R = add64(T0L, T0R, 460393269, 320620315) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[73], chunkR[73]) T0L, T0R = add64(T0L, T0R, 685471733, 587496836) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[74], chunkR[74]) T0L, T0R = add64(T0L, T0R, 852142971, 1086792851) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[75], chunkR[75]) T0L, T0R = add64(T0L, T0R, 1017036298, 365543100) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[76], chunkR[76]) T0L, T0R = add64(T0L, T0R, 1126000580, 2618297676) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[77], chunkR[77]) T0L, T0R = add64(T0L, T0R, 1288033470, 3409855158) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[78], chunkR[78]) T0L, T0R = add64(T0L, T0R, 1501505948, 4234509866) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[79], chunkR[79]) T0L, T0R = add64(T0L, T0R, 1607167915, 987167468) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)
        T0L, T0R = add64(HL, HR, chunkL[80], chunkR[80]) T0L, T0R = add64(T0L, T0R, 1816402316, 1246189591) tempL, tempR = z1(EL, ER) T0L, T0R = add64(T0L, T0R, tempL, tempR) tempL, tempR = ch(EL, ER, FL, FR, GL, GR) T0L, T0R = add64(T0L, T0R, tempL, tempR) T1L, T1R = z0(AL, AR) tempL, tempR = maj(AL, AR, BL, BR, CL, CR) T1L, T1R = add64(T1L, T1R, tempL, tempR)HL, HR = GL, GR GL, GR = FL, FR FL, FR = EL, ER EL, ER = add64(DL, DR, T0L, T0R) DL, DR = CL, CR CL, CR = BL, BR BL, BR = AL, AR AL, AR = add64(T0L, T0R, T1L, T1R)

        h0L, h0R = add64(h0L, h0R, AL, AR)
        h1L, h1R = add64(h1L, h1R, BL, BR)
        h2L, h2R = add64(h2L, h2R, CL, CR)
        h3L, h3R = add64(h3L, h3R, DL, DR)
        h4L, h4R = add64(h4L, h4R, EL, ER)
        h5L, h5R = add64(h5L, h5R, FL, FR)
        h6L, h6R = add64(h6L, h6R, GL, GR)
        h7L, h7R = add64(h7L, h7R, HL, HR)

    end

    return toBytes32(h0L) .. toBytes32(h0R) ..
           toBytes32(h1L) .. toBytes32(h1R) ..
           toBytes32(h2L) .. toBytes32(h2R) ..
           toBytes32(h3L) .. toBytes32(h3R) ..
           toBytes32(h4L) .. toBytes32(h4R) ..
           toBytes32(h5L) .. toBytes32(h5R) ..
           toBytes32(h6L) .. toBytes32(h6R) ..
           toBytes32(h7L) .. toBytes32(h7R)
end